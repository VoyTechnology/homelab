---
- name: Dex | Add Helm Repo
  kubernetes.core.helm_repository:
    name: dex
    repo_url: https://charts.dexidp.io

- name: Dex | Deploy Helm Chart
  kubernetes.core.helm:
    name: dex
    chart_ref: dex/dex
    chart_version: "{{ dex_chart_version }}"
    release_namespace: "{{ dex_k8s_namespace }}"
    values:
      config:
        issuer: "https://login.{{ cluster_domain }}"
        web:
          http: 0.0.0.0:5556
        frontend:
          issuerUrl: "https://login.{{ cluster_domain }}"
          theme: "coreos"
          issuer: "{{ cluster_domain }}"
        logger:
          level: debug
          format: json
        storage:
          type: kubernetes
          config:
            inCluster: true
        expiry:
          authRequests: "10m"
          signingKeys: "6h"
          idTokens: "24h"
        oauth2:
          responseTypes: ["code", "token", "id_token"]
          skipApprovalScreen: true
        
        connectors:
        - type: google
          id: google
          name: Google
          config:
            issuer: https://accounts.google.com
            clientID: "{{ dex_google_client_id }}"
            clientSecret: "{{ dex_google_client_secret }}"
            redirectURI: https://login.{{ cluster_domain }}/callback
            # groups:
            # - "{{ dex_google_group }}"
        staticClients:
        - id: "{{ dex_argo_client_id }}"
          name: ArgoCD
          redirectURIs:
          - "https://argocd.{{ cluster_domain }}/auth/callback"
          - "https://argocd.{{ cluster_domain }}/auth/login"
          secret: "{{ dex_argo_client_secret }}"
        enablePasswordDB: true
        staticPasswords:
        - email: wojtek@bednarzak.com
          hash: "$2y$10$P.qKqSNIDf2Kp/uxZ6x5N.dK7bPCRMoLgwKBisH82B8P3aoUpqprW"
          username: admin
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
        - host: "login.{{ cluster_domain }}"
          paths:
            - pathType: Prefix
              path: /
        tls:
        - hosts:
          - "login.{{ cluster_domain }}"
          secretName: dex-cert
