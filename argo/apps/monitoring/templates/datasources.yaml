apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-{{ tpl $.Values.cluster_name $ }}-datasource
  namespace: monitoring
  labels:
    grafana_datasource: "true"
data:
  datasources.yaml: |-
    apiVersion: 1
    datasources:
    {{- if $.Values.mimir.enabled }}
    - name: {{ tpl $.Values.cluster_name $ }}-metrics
      uid: {{ tpl $.Values.cluster_name $ }}-metrics
      type: prometheus
      access: proxy
      orgId: 1
      url: https://metrics.{{ tpl $.Values.domain $ }}/prometheus
      basicAuth: false
      editable: false
      jsonData:
        oauthPassThru: true
        httpHeaderName1: "X-Scope-OrgID"
      secureJsonData:
        httpHeaderValue1: "{{ tpl $.Values.cluster_name $ }}"
    - name: {{ tpl $.Values.cluster_name $ }}-alerts
      uid: {{ tpl $.Values.cluster_name $ }}-alerts
      type: alertmanager
      access: proxy
      orgId: 1
      url: https://metrics.{{ tpl $.Values.domain $ }}/alertmanager
      basicAuth: false
      editable: false
      jsonData:
        handleGrafanaManagedAlerts: true
        implementation: prometheus
        oauthPassThru: true
        httpHeaderName1: "X-Scope-OrgID"
      secureJsonData:
        httpHeaderValue1: "{{ tpl $.Values.cluster_name $ }}"
    {{- end }}
    {{- if $.Values.loki.enabled }}
    - name: {{ tpl $.Values.cluster_name $ }}-logs
      uid: {{ tpl $.Values.cluster_name $ }}-logs
      type: loki
      access: proxy
      orgId: 1
      url: https://logs.{{ tpl $.Values.domain $ }}
      basicAuth: false
      editable: false
      jsonData:
        oauthPassThru: true
        httpHeaderName1: "X-Scope-OrgID"
      secureJsonData:
        httpHeaderValue1: "{{ tpl $.Values.cluster_name $ }}"
    {{- end }}
